body.preload{
background-image: url('./images/sudoku-modal-bg.svg');
background-repeat: no-repeat;
background-size: 400%;
background-position: top;
}
body.preload *:not(dialog, dialog *){
display:none !important;  
}
#sudoku-board-container {
  width: 100%; /* or a fixed size like 450px */
  height: 100%; /* match board dimensions */
  position: relative;
  overflow: hidden;
}
#sudoku-board {
  display: grid;
  background-color: #000;
  grid-template-columns: repeat(9, 10vmin);
  grid-template-rows: repeat(9, 10vmin);
  padding: 4px;
  z-index: -100;
}

/* Thicker sudoku block borders */
.cell:nth-child(9n + 3),
.cell:nth-child(9n + 6) {
  margin-right: 2px; /* Sets the right border of cells on columns 3 and 6 */
}
.cell:nth-of-type(n + 19):nth-of-type(-n + 27),
.cell:nth-of-type(n + 46):nth-of-type(-n + 54) {
  margin-bottom: 2px; /* Sets bottom border of cells on rows 3 and 6 */
}

/* Styles for cells */
.cell {
  background-color: #fff;
  display: flex;
  justify-content: center;
  align-items: center;
  margin: 1px;
}
.cell .solution,
.cell.prefilled {
  font-size: 5vmin;
}
.cell.prefilled {
  font-weight: bold;
  background: radial-gradient(#e3e3e3, #bdbdbd);
}
.cell.hint .solution {
  color: #bba53d;
}
.invalidSolution {
  color: #ff0500 !important;
}
.cell .candidates {
  display: grid;
  grid-template-columns: repeat(3, 1fr);
  grid-template-rows: repeat(3, calc(100% / 3));
}
.candidates div {
  display: flex;
  align-items: center;
  justify-content: center;
}
.candidates:has(div:not(:empty)) {
  width: 100%; /* Sets width of an element with the candidates class if any of its child divs are not empty*/
  height: 100%; /* Sets height of an element with the candidates class if any of its child divs are not empty*/
}
.cell.active {
  background-color: #e7f3ff;
  box-shadow: inset 0 0 0.5em #0281ff;
}
